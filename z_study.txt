#######20250725###########
rust에서 변수는 불변 그러므로 변수 설정 시 가변일 경우 mut를 입력 해야됨 / rust는 이전의 있던 변수의 값을 가리는 것을 허용한다.(shadow)
    -> 러스트가 제공하는 안정성과 쉬운 동시성을 활용하는 방식으로 코드를 작성할 수 있도록 하는 넛지 (nudge, 슬며시 선택을 유도하기) 중 하나입니다
    -> 같은 변수명을 사용 할려면 let 키워드를 반복하여 변수를 가릴 수 있다. -> 같은 변수명으로 다른 타입의 값을 저장 할 수 있다.

io::stdin().read_line : 표준 입력(콘솔, 즉 터미널)에서 한 줄의 입력을 읽어들이는 함수로, 입력값을 지정한 가변 String 변수에 저장한다

#######20250730###########
1. rust는 강한 정적 타입 시스템을 가진다 / 표현식 기반의 언어 -> 표현식과 구문의 구분을 잘 해야한다.
    -> 구문은 어떤 동작을 수행하고 값을 반환하지 않는 명령이다.
    -> 표현식은 결괏값을 평가한다. -> 표현식에 ;(세미콜론)을 입력 시 표현식에서 구문으로 변경되어서 값을 반환하지 않는다.

2. rust는 함수나 변수 이름을 관례로 스네이크 케이스를 사용한다. -> 모든 글자를 소문자로 쓰고 단어구분을 _(밑줄)로 한다.

3. rust에서 함수 시그니처에서 매개변수의 타입을 무조건 설정을 해야한다.
    -> 함수의 정의에 타입 명시를 강제하면 이 함수를 다른 코드에서 사용할 때 여러분이 의도한 타입을 컴파일러가 추측하지 않아도 되게 된다. 
    -> 컴파일러는 또한 함수가 기대한 타입이 무엇인지 알고 있으면 더욱 유용한 에러 메시지를 제공할 수 있습니다.

4. rust는 boolean 타입이 아닌 값을 boolean 타입으로 자동변환을 안한다.